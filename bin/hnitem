#!/usr/bin/env python3

import datetime
import json
import sys
import textwrap
import urllib.parse
import urllib.request


def get_item_id(item_arg):
    split_url = urllib.parse.urlsplit(item_arg)
    qs = urllib.parse.parse_qs(split_url.query)
    return qs.get('id', [item_arg])[0]


def get_item(item_id):
    url = 'https://hacker-news.firebaseio.com/v0/item/{}.json'.format(item_id)
    response = urllib.request.urlopen(url).read()
    item = json.loads(response.decode('utf-8'))
    assert str(item['id']) == item_id
    return item


def format_body(text):
    text = text.replace('  ', ' ')
    text = '\n'.join(textwrap.wrap(text, width=72))
    text = text.replace('&#x27;', "'")
    text = text.replace('&quot;', '"')
    text = text.replace('&#x2F;', '/')
    text = text.replace('<p>', '\n</p>\n<p>\n')
    return text


def make_comment(item):
    utc_date = datetime.datetime.utcfromtimestamp(item['time'])
    fmt_date = utc_date.strftime('%Y-%m-%d %H:%M:%S +0000')
    comment = {
        'date': fmt_date,
        'name': item['by'],
        'url': 'https://news.ycombinator.com/user?id=' + item['by'],
        'source': 'https://news.ycombinator.com/item?id=' + str(item['id']),
        'body': format_body(item['text'])

    }
    return comment


def make_comment_code(comment):
    s = ('<!-- date: {} -->\n' +
         '<!-- name: {} -->\n' +
         '<!-- url: {} -->\n' +
         '<!-- source: {} -->\n' +
         '<p>\n' +
         '{}\n' +
         '</p>\n').format(comment['date'], comment['name'],
                          comment['url'], comment['source'],
                          comment['body'])
    return s


def main():
    item_id = get_item_id(sys.argv[1])
    item = get_item(item_id)
    comment = make_comment(item)
    code = make_comment_code(comment)
    print(code)


if __name__ == '__main__':
    main()
